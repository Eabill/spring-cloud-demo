# myava-gateway-client config
#server: 
#  port: 8080
spring:
  application:
    name: myava-gateway-client
  redis:
    host: 127.0.0.1
    port: 6379
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
      routes:
      - id: path-route
        # 可以配置一个具体地址如：http://server:port，也可以配置成lb://serviceid形式实现负载均衡
        #uri: http://localhost:9001
        uri: lb://myava-eureka-provider
        predicates:
        - Path=/demo/**
        filters:
        #- PrefixPath=/service
        - name: RequestRateLimiter
          args:
            redis-rate-limiter.replenishRate: 10
            redis-rate-limiter.burstCapacity: 20
            key-resolver: "#{@apiKeyResolver}"
        - name: Hystrix
          args:
            name: fallbackcmd
            fallbackUri: forward:/fallback

hystrix.command.fallbackcmd.execution.isolation.thread.timeoutInMilliseconds: 5000

# 开启actuator，访问http://localhost:8080/actuator/gateway/routes返回当前网关路由信息
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: ALWAYS

#eureka:
#  instance:
#    prefer-ip-address: true
#  client:
#    register-with-eureka: true
#    fetch-registry: true
#    service-url: 
#      defaultZone: http://eureka-server1:7001/eureka/,http://eureka-server2:7002/eureka/,http://eureka-server3:7003/eureka/          

---
spring:
  profiles: client1
server: 
  port: 8081
eureka:
  instance:
    prefer-ip-address: true
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url: 
      defaultZone: http://eureka-server1:7001/eureka/,http://eureka-server2:7002/eureka/,http://eureka-server3:7003/eureka/          

---
spring:
  profiles: client2
server: 
  port: 8082
eureka:
  instance:
    prefer-ip-address: true
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url: 
      defaultZone: http://eureka-server1:7001/eureka/,http://eureka-server2:7002/eureka/,http://eureka-server3:7003/eureka/          
