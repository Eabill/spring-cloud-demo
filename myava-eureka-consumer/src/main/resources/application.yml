# Eureka-consumer config
spring:
  application:
    name: myava-eureka-consumer
  sleuth:
    sampler:
      probability: 1.0
  zipkin:
    sender:
      type: kafka
    service:
      name: ${spring.application.name}
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: ${spring.application.name}
      enable-auto-commit: false
      #auto-commit-interval: 5000MS
      auto-offset-reset: latest
      #max-poll-records: 500
      properties:
        max.poll.interval.ms: 300000
#    listener:
#      type: batch
#      concurrency: 4
#      ack-mode: manual-immediate
    
server: 
  port: 8081
#  servlet:
#    context-path: /consumer

swagger:
  title: API接口文档
  description: API描述
  version: 1.0
  base-package: com.myava.eureka.consumer.controller

eureka:
  instance:
    prefer-ip-address: true
    #hostname: localhost
    lease-renewal-interval-in-seconds: 30
    lease-expiration-duration-in-seconds: 90
  client:
    # 是否注册实例到eureka注册中心，默认true
    register-with-eureka: false
    fetch-registry: true
    registry-fetch-interval-seconds: 30
    service-url:
      defaultZone: http://eureka-server1:7001/eureka/,http://eureka-server2:7002/eureka/,http://eureka-server3:7003/eureka/

feign.hystrix.enabled: true
# Ribbon超时时间和Hystrix超时时间决定Feign超时时间
# Feign重试与Ribbon存在冲突,spring在某个版本后默认关闭了feign自身的重试机制
# 引入ribbon包后,默认会自动开启ribbon重试机制,自己需要配置ribbon的超时时间,只有ribbon的超时时间小于hystrix的超时熔断时间时,才会进行重试
# (ribbon默认会对当前服务实例重试一次,然后对下一个服务实例重试一次)
# 注意: 
# 默认情况下,GET方式请求无论是连接异常还是读取异常,都会进行重试
# 非GET方式请求,只有连接异常时,才会进行重试
# 不要启用ribbon的重试所有操作,即OkToRetryOnAllOperations不要配置true,因为涉及到幂等性问题
ribbon:
  ReadTimeout: 3000
  ConnectTimeout: 1000
#  MaxAutoRetries: 0                # 同一台实例最大重试次数,不包括首次调用
#  MaxAutoRetriesNextServer: 1      # 重试负载均衡其他的实例最大重试次数,不包括首次调用
#  OkToRetryOnAllOperations: false  # 是否所有操作都重试，默认false 
hystrix.command.default.execution:
  isolation:
    thread.timeoutInMilliseconds: 8000 #默认是1秒，大于ReadTimeout+ConnectTimeout
  timeout.enabled: true

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: ALWAYS
      